#include <iostream>
#include <windows.h>
using namespace std;


enum GameObject : short { HALL, WALL, COIN, ENEMY, MEDKIT, COFFEE };
enum Color : short {
    BLACK, DARKBLUE, DARKGREEN, TURQUOISE, DARKRED,
    PURPLE, DARKYELLOW, GREY, DARKGREY, BLUE, GREEN,
    CYAN, RED, PINK, YELLOW, WHITE, BROWN = 6
};

const int HEIGHT = 25;
const int WIDTH = 65;

void drawMap(int map[HEIGHT][WIDTH], HANDLE h) {
    for (int y = 0; y < HEIGHT; y++) {
        for (int x = 0; x < WIDTH; x++) {
            switch (map[y][x]) {
            case HALL: SetConsoleTextAttribute(h, BLACK); cout << " "; break;
            case WALL: SetConsoleTextAttribute(h, DARKGREEN); cout << (char)178; break;
            case COIN: SetConsoleTextAttribute(h, YELLOW); cout << "$"; break;
            case ENEMY: SetConsoleTextAttribute(h, DARKRED); cout << "#"; break;
            case MEDKIT: SetConsoleTextAttribute(h, RED); cout << "+"; break;
            case COFFEE: SetConsoleTextAttribute(h, BROWN); cout << "C"; break;
            }
        }
        cout << "\n";
    }
}

int main() {
    HANDLE h = GetStdHandle(STD_OUTPUT_HANDLE);
    SetConsoleTitleW(L"Bomberman");

    int map[HEIGHT][WIDTH] = {};
    int health = 100, energy = 500, steps = 0, lastMedkitStep = -10;
    int coinsCollected = 0, totalCoins = 0;

    int seed = 1234;
    for (int y = 0; y < HEIGHT; y++) {
        for (int x = 0; x < WIDTH; x++) {
            seed = (seed * 73 + 41) % 1000;
            int r = seed % 14;
            if (r < 6) map[y][x] = HALL;
            else if (r < 9) map[y][x] = COIN;
            else if (r == 9) map[y][x] = ENEMY;
            else if (r == 10) map[y][x] = MEDKIT;
            else if (r == 11) map[y][x] = COFFEE;
            else map[y][x] = WALL;

            if (x == 0 || y == 0 || x == WIDTH - 1 || y == HEIGHT - 1)
                map[y][x] = WALL;

            if ((x == 0 && y == 2) || (x == 1 && y == 2) || (x == 2 && y == 2) ||
                (x == WIDTH - 1 && y == HEIGHT - 3) || (x == WIDTH - 2 && y == HEIGHT - 3) || (x == WIDTH - 3 && y == HEIGHT - 3))
                map[y][x] = HALL;

            if (map[y][x] == COIN) totalCoins++;
        }
    }

    drawMap(map, h);

    COORD hero = { 0, 2 };
    SetConsoleCursorPosition(h, hero);
    SetConsoleTextAttribute(h, BLUE);
    cout << "O";

    while (true) {
        wchar_t title[128];
        swprintf(title, 128, L"HP: %d | Energy: %d | Coins: %d/%d", health, energy, coinsCollected, totalCoins);
        SetConsoleTitleW(title);

        COORD next = hero;
        if (GetAsyncKeyState(VK_UP) & 0x8000) next.Y--;
        else if (GetAsyncKeyState(VK_DOWN) & 0x8000) next.Y++;
        else if (GetAsyncKeyState(VK_LEFT) & 0x8000) next.X--;
        else if (GetAsyncKeyState(VK_RIGHT) & 0x8000) next.X++;
        else {
            Sleep(50);
            continue;
        }

        SetConsoleCursorPosition(h, hero);
        SetConsoleTextAttribute(h, BLACK);
        cout << " ";

        if (map[next.Y][next.X] == WALL) next = hero;

        steps++;
        energy--;
        if (energy <= 0) {
            MessageBoxW(0, L"No energy left!", L"Game Over", MB_OK);
            break;
        }

        short obj = map[next.Y][next.X];
        switch (obj) {
        case COIN:
            coinsCollected++;
            map[next.Y][next.X] = HALL;
            break;
        case ENEMY:
            health -= 30;
            map[next.Y][next.X] = HALL;
            break;
        case MEDKIT:
            if (health < 100) {
                health += 25;
                if (health > 100) health = 100;
                lastMedkitStep = steps;
                map[next.Y][next.X] = HALL;
            }
            break;
        case COFFEE:
            if (steps - lastMedkitStep >= 3) {
                energy += 25;
                map[next.Y][next.X] = HALL;
            }
            break;
        }

        if (health <= 0) {
            MessageBoxW(0, L"No Health", L"Game Over", MB_OK);
            break;
        }

        if (next.X == WIDTH - 1 && next.Y == HEIGHT - 3) {
            MessageBoxW(0, L"You found an exit congrats!!", L"Win", MB_OK);
            break;
        }

        if (coinsCollected == totalCoins) {
            MessageBoxW(0, L"All the coins collected", L"Win", MB_OK);
            break;
        }

        hero = next;
        SetConsoleCursorPosition(h, hero);
        SetConsoleTextAttribute(h, BLUE);
        cout << "O";

        Sleep(INFINITE);
    }
}
